// Generated by CoffeeScript 1.7.1
var Game, MapGrid, Player, Tile, Unit, UnitFatory;

UnitFatory = (function() {
  function UnitFatory() {}

  UnitFatory.build = function(type, count) {
    var i, units, _i;
    units = [];
    for (i = _i = 0; 0 <= count ? _i <= count : _i >= count; i = 0 <= count ? ++_i : --_i) {
      units.push(new Unit(type));
    }
    return units;
  };

  return UnitFatory;

})();

Unit = (function() {
  Unit.TYPE_SOLDIER = "Soldat";

  function Unit(type) {
    this.type = type;
  }

  return Unit;

})();

Player = (function() {
  function Player(name) {
    this.name = name;
  }

  return Player;

})();

Tile = (function() {
  function Tile(width) {
    this.width = width;
    this.width = width;
    this.height = width;
    this.size = width / 2;
  }

  return Tile;

})();

MapGrid = (function() {
  function MapGrid(tile_width, radius, min_dense, threshold) {
    this.radius_q = radius;
    this.radius_r = radius;
    this.tile = new Tile(tile_width);
    this.width = (this.radius_q * 2 + 1) * this.tile.width;
    this.height = (this.radius_r * 2 + 1) * this.tile.width;
    this.map_generator = new MapGenerator(this.radius_q, this.radius_r, min_dense, threshold);
  }

  MapGrid.prototype.generateMap = function() {
    this.map_generator.generate();
    return this.positions = this.map_generator.positions;
  };

  MapGrid.prototype.setStartPositions = function(players, initial_units) {
    var max_ix, min_ix, sums;
    sums = this.positions.map(function(pos) {
      return pos.r + pos.q;
    });
    max_ix = sums.indexOf(Math.max.apply(null, sums));
    min_ix = sums.indexOf(Math.min.apply(null, sums));
    this.positions[max_ix].setOwner(players[0], initial_units);
    return this.positions[min_ix].setOwner(players[1], initial_units);
  };

  return MapGrid;

})();

Game = (function() {
  function Game(tile_width, radius, min_dense, threshold) {
    this.map_grid = new MapGrid(tile_width, radius, min_dense, threshold);
    this.width = this.map_grid.width;
    this.height = this.map_grid.height;
    this.players = [new Player("Player 1", new Player("Player 2"))];
    this.initial_units = UnitFatory.build(Unit.TYPE_SOLDIER, 10);
  }

  Game.prototype.start = function() {
    Crafty.init(window.width, window.height);
    Crafty.background('rgb(249, 223, 125)');
    Crafty.load(['assets/cell_default.png'], function() {});
    return Crafty.scene('Menu', this);
  };

  return Game;

})();

window.onload = function() {
  var game;
  game = new Game(128, 3, 0.2, 0.3);
  return game.start();
};
